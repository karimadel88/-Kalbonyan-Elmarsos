{"ast":null,"code":"var _jsxFileName = \"E:\\\\ka\\\\-Kalbonyan-Elmarsos\\\\Kalbonyan-Elmarsos\\\\Udemy\\\\The Complete React Developer Course\\\\Ch3- Hello react\\\\indecision-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // // import App from './App';\n// import Counter from './Counter';\n// ReactDOM.render(\n//   <React.StrictMode>\n//     {/*<App />*/}\n//     <Counter />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n// Main data in my App\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = {\n  title: 'Indecision App',\n  subtitle: 'How to Be better in this life',\n  options: []\n}; // Function to add task and prevent reload to form\n\nconst onFormSubmit = e => {\n  e.preventDefault();\n  const option = e.target.elements.option.value;\n\n  if (option) {\n    app.options.push(option);\n    e.target.elements.option.value = '';\n  }\n\n  renderIndecisionApp();\n}; // Funtion To remove all tasks\n\n\nconst removeAll = () => {\n  app.options = [];\n  renderIndecisionApp();\n}; // Function to setup alert choose randomly task \n\n\nconst whatDo = () => {\n  const len = app.options.length;\n  const randomIndex = Math.floor(Math.random() * len);\n  alert(app.options[randomIndex]);\n  renderIndecisionApp();\n}; // DOM to view details of page\n\n\nconst appRoot = document.getElementById('root'); // Main fumction to render state\n\nconst renderIndecisionApp = () => {\n  const template = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: app.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this), app.subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: app.subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 32\n    }, this), app.options.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Here are your options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 41\n    }, this) : \"No options\", /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: app.options.length === 0,\n      onClick: whatDo,\n      children: \"What I should do ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: removeAll,\n      children: \"Remove All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: app.options.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 11\n  }, this); // To render template1    \n\n\n  ReactDOM.render(template, appRoot);\n};\n\nrenderIndecisionApp();","map":{"version":3,"sources":["E:/ka/-Kalbonyan-Elmarsos/Kalbonyan-Elmarsos/Udemy/The Complete React Developer Course/Ch3- Hello react/indecision-app/src/index.js"],"names":["React","ReactDOM","app","title","subtitle","options","onFormSubmit","e","preventDefault","option","target","elements","value","push","renderIndecisionApp","removeAll","whatDo","len","length","randomIndex","Math","floor","random","alert","appRoot","document","getElementById","template","map","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AACA,MAAMC,GAAG,GAAG;AACVC,EAAAA,KAAK,EAAG,gBADE;AAEVC,EAAAA,QAAQ,EAAG,+BAFD;AAGVC,EAAAA,OAAO,EAAG;AAHA,CAAZ,C,CAMA;;AACA,MAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,EAAAA,CAAC,CAACC,cAAF;AACA,QAAMC,MAAM,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,MAAlB,CAAyBG,KAAxC;;AACA,MAAGH,MAAH,EAAU;AACRP,IAAAA,GAAG,CAACG,OAAJ,CAAYQ,IAAZ,CAAiBJ,MAAjB;AACAF,IAAAA,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,MAAlB,CAAyBG,KAAzB,GAAiC,EAAjC;AACD;;AACDE,EAAAA,mBAAmB;AACtB,CARD,C,CAUA;;;AACA,MAAMC,SAAS,GAAG,MAAM;AACtBb,EAAAA,GAAG,CAACG,OAAJ,GAAc,EAAd;AACAS,EAAAA,mBAAmB;AACpB,CAHD,C,CAKA;;;AACA,MAAME,MAAM,GAAG,MAAM;AACnB,QAAMC,GAAG,GAAGf,GAAG,CAACG,OAAJ,CAAYa,MAAxB;AACA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgBL,GAA5B,CAApB;AACAM,EAAAA,KAAK,CAACrB,GAAG,CAACG,OAAJ,CAAYc,WAAZ,CAAD,CAAL;AACAL,EAAAA,mBAAmB;AACpB,CALD,C,CAOA;;;AACA,MAAMU,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhB,C,CAEA;;AACA,MAAMZ,mBAAmB,GAAG,MAAK;AAC/B,QAAMa,QAAQ,gBACN;AAAA,4BACI;AAAA,gBAAKzB,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,GAAG,CAACE,QAAJ,iBAAgB;AAAA,gBAAIF,GAAG,CAACE;AAAR;AAAA;AAAA;AAAA;AAAA,YAFrB,EAGKF,GAAG,CAACG,OAAJ,CAAYa,MAAZ,GAAqB,CAArB,gBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzB,GAAwD,YAH7D,eAII;AAAQ,MAAA,QAAQ,EAAIhB,GAAG,CAACG,OAAJ,CAAYa,MAAZ,KAAqB,CAAzC;AAA4C,MAAA,OAAO,EAAEF,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,gBACGb,GAAG,CAACG,OAAJ,CAAYuB,GAAZ,CAAiBnB,MAAD,iBAAU;AAAA,kBAAkBA;AAAlB,SAASA,MAAT;AAAA;AAAA;AAAA;AAAA,cAA1B;AADH;AAAA;AAAA;AAAA;AAAA,YANJ,eASI;AAAM,MAAA,QAAQ,EAAEH,YAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADR,CAD+B,CAkB/B;;;AACAL,EAAAA,QAAQ,CAAC4B,MAAT,CAAgBF,QAAhB,EAAyBH,OAAzB;AACD,CApBD;;AAsBAV,mBAAmB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n// // import App from './App';\n// import Counter from './Counter';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n  \n//     {/*<App />*/}\n//     <Counter />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// Main data in my App\nconst app = {\n  title : 'Indecision App',\n  subtitle : 'How to Be better in this life',\n  options : []\n};\n\n// Function to add task and prevent reload to form\nconst onFormSubmit = (e) => {\n    e.preventDefault();\n    const option = e.target.elements.option.value;\n    if(option){\n      app.options.push(option);\n      e.target.elements.option.value = ''\n    }\n    renderIndecisionApp();\n}\n\n// Funtion To remove all tasks\nconst removeAll = () => {\n  app.options = []\n  renderIndecisionApp();\n}\n\n// Function to setup alert choose randomly task \nconst whatDo = () => {\n  const len = app.options.length;\n  const randomIndex = Math.floor((Math.random() * len));\n  alert(app.options[randomIndex]);\n  renderIndecisionApp();\n}\n\n// DOM to view details of page\nconst appRoot = document.getElementById('root');\n\n// Main fumction to render state\nconst renderIndecisionApp = () =>{ \n  const template = (\n          <div>\n              <h1>{app.title}</h1>\n              {app.subtitle && <p>{app.subtitle}</p>}\n              {app.options.length > 0 ? <p>Here are your options</p> : \"No options\"}\n              <button disabled = {app.options.length===0} onClick={whatDo}>What I should do ?</button>\n              <button onClick={removeAll}>Remove All</button>\n              <ol>\n                {app.options.map((option)=><li key={option}>{option}</li>)}\n              </ol>\n              <form onSubmit={onFormSubmit}>\n                <input type='text' name='option' />\n                <button >Add Option</button>\n              </form>\n          </div>\n    );\n\n  // To render template1    \n  ReactDOM.render(template,appRoot);\n}\n\nrenderIndecisionApp();"]},"metadata":{},"sourceType":"module"}